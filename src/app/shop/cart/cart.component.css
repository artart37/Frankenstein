.wrapper {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: auto 1rem auto 1rem auto;
  grid-template-columns: 33.3333% 33.3333% 33.3333%; /*Number and width of items*/
  grid-gap: 1rem 1rem;
  /*Autoprefixer*/
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-line-pack: center;
      align-content: center;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
          padding:1rem;
}
.wrapper * {
-webkit-box-sizing: border-box;
        box-sizing: border-box;
}
.product:hover {
  -webkit-box-shadow: 4px 4px 5px 0px #888888;
  -moz-box-shadow: 4px 4px 5px 0px #888888;
  box-shadow: 4px 4px 5px 0px #888888;
}
.prod_title {
  text-overflow: ellipsis;
  overflow: hidden;
}
.prodimg{
  padding: 2rem;
}
.prod_title{
display: block;
color:#222;
white-space: nowrap;
font-weight: bold;
}
.prod_price {
display:block;
color: #E91E63;
font-weight: bold;
}
.special_note{
  font-size: 0.7em;
  color: rgb(1, 0, 2);
  display: block;
  font-weight: 400;
  font-weight: bold;
}
.hidden_gem{ 
 display: none;
 position: relative;
}
.product:hover>.hidden_gem{
display: block;
}
.call_for_action{
  display: flex;
  width:100%;
  flex-direction: column;
  flex-wrap: wrap;
  align-items:left;
  position: absolute;
  background: #fff;
  border-radius: 0 0 4px 4px;
  padding: 0 2rem 2rem 0;
  -webkit-box-shadow: 4px 4px 5px 0px #888888;
  -moz-box-shadow: 4px 4px 5px 0px #888888;
  box-shadow: 4px 4px 5px 0px #888888;
}

.action{
  display: block;
}
.cart, .details{
  padding: 0.5em;
  font-weight: bold;
  border: none;
  font-size: 0.9em;
  background-color: #f1f1f1;
  outline: none;
  margin: 0 1% 0 0;
  cursor: pointer;
  background-position: right bottom;
  width: 49%;
  position: relative;/* We use relative positioning for here, because our vcheckmark element is absolutely positioned, and otherwise it would be absolutely positioned somewhere down there */
}
.details:hover, .plus:hover:enabled, .minus:hover:enabled {
  background-color:  #ebe7e7;
}
/* .cart::before {
content:url("/assets/images/cart.png")
} */
/* .cart:hover{
  We set the 50% of the button to pink from right and th erest to the default color
  background: linear-gradient(to right,rgb(251 4 67) 50%,  #f1f1f1 50%);
  We set the width of the background to 200% (2 times 50% of the linear gradient) and 100% of height
  background-size: 200% 100%;
  background-position: left bottom;
  transition: all 0.5s ease;
} */
.prodimg>img{
  width: 100%;
  height: auto;
  -o-object-fit: cover; /* Optional, we could have not used it here */
     object-fit: cover; /* Optional, we could have not used it here */
}
/* .cart:hover>.addtext{
visibility: hidden;
} */

.vcheckmark {
  visibility:hidden;
  position: absolute;
  content: url(/assets/images/tick.png);
  width: 25px;
  height: auto;
  top: 3px;
  left: 0;
  /* animation: addtocart 0.7s ease; We have moved this to the angular addtocart.ts animation logic, but we still keep the class to make the animation function more smoothly, with lesss code*/
}
/* Using keyframes as we need it to get the item to right and back to left: left:0 to left:35 */
/* @keyframes addtocart {
  Animating visibility as display is not animated well
  0% {visibility: visible; left: 0;}
  50% {left: 65px;}
  100% {left: 0;}
};*/ 

/* Examples */
/* https://codyhouse.co/demo/quick-add-to-cart/index.html */
/* https://codepen.io/kay8/pen/azKbjN */
